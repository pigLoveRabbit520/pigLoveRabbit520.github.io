<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Linux - 标签 - pigLoveRabbit的网站</title><link>https://example.com/tags/linux/</link><description>Linux - 标签 - pigLoveRabbit的网站</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 03 Jul 2020 20:00:00 +0000</lastBuildDate><atom:link href="https://example.com/tags/linux/" rel="self" type="application/rss+xml"/><item><title>调试PHP源码</title><link>https://example.com/debug_php_source_code/</link><pubDate>Fri, 03 Jul 2020 20:00:00 +0000</pubDate><author>Salamander</author><guid>https://example.com/debug_php_source_code/</guid><description>缘由 有时候，我们想看看一个变量底层对应底层的数据结构或者PHP脚本是如何执行的，gdb就是这样一个好工具，之前有篇文章写过如何简单使用gdb</description></item><item><title>gdb调试简单使用</title><link>https://example.com/gdb_use/</link><pubDate>Thu, 02 Jul 2020 11:00:00 +0000</pubDate><author>Salamander</author><guid>https://example.com/gdb_use/</guid><description>gdb gdb 是 UNIX 及 UNIX-like 下的调试工具，在 Linux 下一般都直接在命令行中用 gdb 来调试程序，相比 Windows 上的集成开发环境 IDE 提供的图形界面调试，一开始使用 gdb 调试可能会让你感</description></item><item><title>一步步自己做个Docker之Docker网络原理</title><link>https://example.com/step_to_step_docker%E4%B9%8Bdocker_network_underlying/</link><pubDate>Tue, 28 Apr 2020 15:00:00 +0000</pubDate><author>Salamander</author><guid>https://example.com/step_to_step_docker%E4%B9%8Bdocker_network_underlying/</guid><description>本文环境： OS：Ubuntu 18.04.4 LTS Golang版本：1.12.13 自己创建Docker网络 当 Docker 启动时，会自动在主机上创建一个 docker0 虚拟网桥，实际上</description></item><item><title>Linux之iptables</title><link>https://example.com/linux_iptables/</link><pubDate>Sun, 26 Apr 2020 13:00:00 +0000</pubDate><author>Salamander</author><guid>https://example.com/linux_iptables/</guid><description>简介 管理网络流量是系统管理员必需处理的最棘手工作之一，我们必需规定连接系统的用户满足防火墙的传入和传出要求，以最大限度保证系统免受攻击。ip</description></item><item><title>一步步自己做个Docker之Go调用Namespace</title><link>https://example.com/docker_go_namespace/</link><pubDate>Thu, 26 Mar 2020 21:00:00 +0000</pubDate><author>Salamander</author><guid>https://example.com/docker_go_namespace/</guid><description>本文环境： OS：Ubuntu 18.04.4 LTS Golang版本：1.12.13 Golang Go语言是Google开发的一种静态类型、编译型的高级语言，它设计的蛮简单</description></item><item><title>Linux网络虚拟化技术之Veth和Bridge</title><link>https://example.com/linu_veth_and_bridge/</link><pubDate>Tue, 14 Jan 2020 13:00:00 +0000</pubDate><author>Salamander</author><guid>https://example.com/linu_veth_and_bridge/</guid><description>Veth Veth缩写是Virtual ETHernet。veth设备是在linux内核中是成对出现（所以也叫veth-pair），两个设备彼此相连，</description></item><item><title>Linux网络虚拟化技术之tun/tap</title><link>https://example.com/tun-tap/</link><pubDate>Mon, 13 Jan 2020 15:00:00 +0000</pubDate><author>Salamander</author><guid>https://example.com/tun-tap/</guid><description>我们都知道，Linux实际是通过网络设备去操作和使用网卡的，系统安装了一个网卡之后会为其生成一个网络设备实例，比如eth0（或者叫enp7s</description></item></channel></rss>