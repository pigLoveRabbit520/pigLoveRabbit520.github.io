<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>GC - 标签 - pigLoveRabbit的网站</title><link>https://example.com/tags/gc/</link><description>GC - 标签 - pigLoveRabbit的网站</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 01 Apr 2020 09:00:00 +0000</lastBuildDate><atom:link href="https://example.com/tags/gc/" rel="self" type="application/rss+xml"/><item><title>Java之GC</title><link>https://example.com/java_gc/</link><pubDate>Wed, 01 Apr 2020 09:00:00 +0000</pubDate><author>Salamander</author><guid>https://example.com/java_gc/</guid><description><![CDATA[<p></p>
<h2 id="gc">GC</h2>
<p>GC就是垃圾回收（<code>Garbage Collection</code>），如果你写过C++或者C程序的，你就会知道<code>new</code>一个数据后，就需要<code>delete</code>它的内存，这就是手动管理内存，但这样如果你粗心点的话，就容易造成内存泄露，所以就有了自动垃圾回收，也就我们这里所讨论的GC。Java的GC会对JVM（Java Virtual Machine）中的内存进行标记，并确定哪些内存需要回收，根据一定的回收策略，自动的回收内存，永不停息（Nerver Stop）的保证JVM中的内存空间，防止出现内存泄露和溢出问题。<br>
其实GC很早就有了，1960年诞生于MIT的<strong>Lisp</strong>是第一门真正使用内存动态分配和垃圾收集技术的语言。</p>]]></description></item></channel></rss>