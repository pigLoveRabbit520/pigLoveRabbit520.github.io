<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Synchronized - 标签 - 猪爱兔的网站</title><link>https://pigLoveRabbit520.github.io/tags/synchronized/</link><description>Synchronized - 标签 - 猪爱兔的网站</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 25 Feb 2020 19:00:00 +0000</lastBuildDate><atom:link href="https://pigLoveRabbit520.github.io/tags/synchronized/" rel="self" type="application/rss+xml"/><item><title>Java之synchronized的实现原理</title><link>https://pigLoveRabbit520.github.io/java_synchronized_underlying/</link><pubDate>Tue, 25 Feb 2020 19:00:00 +0000</pubDate><author>Salamander</author><guid>https://pigLoveRabbit520.github.io/java_synchronized_underlying/</guid><description><![CDATA[<h2 id="synchronized">synchronized</h2>
<p>在Java多线程编程中，我们最先碰到的也是最简单的方法就利用<code>synchronized</code>关键字。用它的方式有三种：</p>
<ul>
<li>修饰实例方法，锁是当前实例对象</li>
<li>修饰静态方法，锁是当前类的class对象（每个类都有一个Class对象）</li>
<li>修饰代码块，锁定括号里的对象</li>
</ul>
<p>加上<code>synchronized</code>之后，我们的代码就变成了同步代码，神奇又强大，但有的时候也不禁会思考下：Java底层是怎么实现<code>synchronized</code>关键字的？<br>
在阅读了一些文章之后，我在这里做了一些归纳和总结。</p>]]></description></item></channel></rss>